% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AzureDataLake.R
\name{adls.fileinputstream.readfully}
\alias{adls.fileinputstream.readfully}
\title{Read an adlFileInputStream.}
\usage{
adls.fileinputstream.readfully(adlFileInputStream, position, buffer, offset,
  length, verbose = FALSE)
}
\arguments{
\item{adlFileInputStream}{adlFileInputStream of the file}

\item{position}{position in file to read from (starts from zero)}

\item{buffer}{raw buffer to read into}

\item{offset}{offset into the byte buffer at which to read the data into}

\item{length}{number of bytes to read}

\item{verbose}{Print tracing information (default FALSE)}
}
\value{
list that contains number of bytes read and the \code{buffer}
}
\description{
Read an adlFileInputStream.
}
\seealso{
Other Azure Data Lake Store functions: \code{\link{adls.append.core}},
  \code{\link{adls.append.direct}},
  \code{\link{adls.append}}, \code{\link{adls.concat}},
  \code{\link{adls.create}}, \code{\link{adls.delete}},
  \code{\link{adls.file.info}},
  \code{\link{adls.fileinputstream.available}},
  \code{\link{adls.fileinputstream.close}},
  \code{\link{adls.fileinputstream.create}},
  \code{\link{adls.fileinputstream.getpos}},
  \code{\link{adls.fileinputstream.length}},
  \code{\link{adls.fileinputstream.marksupported}},
  \code{\link{adls.fileinputstream.mark}},
  \code{\link{adls.fileinputstream.readfromservice}},
  \code{\link{adls.fileinputstream.read}},
  \code{\link{adls.fileinputstream.reset}},
  \code{\link{adls.fileinputstream.seek}},
  \code{\link{adls.fileinputstream.skip}},
  \code{\link{adls.fileoutputstream.close}},
  \code{\link{adls.fileoutputstream.create}},
  \code{\link{adls.fileoutputstream.flush}},
  \code{\link{adls.fileoutputstream.write}},
  \code{\link{adls.ls}}, \code{\link{adls.mkdir}},
  \code{\link{adls.read.core}},
  \code{\link{adls.read.direct}}, \code{\link{adls.read}},
  \code{\link{adls.rename}},
  \code{\link{createAdlExponentialBackoffRetryPolicy}},
  \code{\link{createAdlNonIdempotentRetryPolicy}},
  \code{\link{createAdlRetryPolicy}},
  \code{\link{shouldRetry.adlExponentialBackoffRetryPolicy}},
  \code{\link{shouldRetry.adlNonIdempotentRetryPolicy}},
  \code{\link{shouldRetry}}
}
