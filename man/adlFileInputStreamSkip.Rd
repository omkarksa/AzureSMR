% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AzureDataLake.R
\name{adlFileInputStreamSkip}
\alias{adlFileInputStreamSkip}
\title{Skip to given position in stream.}
\usage{
adlFileInputStreamSkip(adlFileInputStream, n)
}
\arguments{
\item{adlFileInputStream}{adlFileInputStream of the file}

\item{n}{position to seek to}
}
\value{
Skips over and discards n bytes of data from the input stream.
The skip method may, for a variety of reasons, end up skipping over some smaller
number of bytes, possibly 0. The actual number of bytes skipped is returned.
Exception IOException if there is an error
Exception EOFException if attempting to seek past end of file
}
\description{
Skip to given position in stream.
}
\seealso{
Other Azure Data Lake Store functions: \code{\link{adlFileInputStreamAvailable}},
  \code{\link{adlFileInputStreamClose}},
  \code{\link{adlFileInputStreamGetPos}},
  \code{\link{adlFileInputStreamLength}},
  \code{\link{adlFileInputStreamMarkSupported}},
  \code{\link{adlFileInputStreamMark}},
  \code{\link{adlFileInputStreamReadBuffered}},
  \code{\link{adlFileInputStreamRead}},
  \code{\link{adlFileInputStreamReset}},
  \code{\link{adlFileInputStreamSeek}},
  \code{\link{adlFileOutputStreamClose}},
  \code{\link{adlFileOutputStreamFlush}},
  \code{\link{adlFileOutputStreamWrite}},
  \code{\link{azureDataLakeAppendBOS}},
  \code{\link{azureDataLakeAppendCore}},
  \code{\link{azureDataLakeAppend}},
  \code{\link{azureDataLakeCreate}},
  \code{\link{azureDataLakeDelete}},
  \code{\link{azureDataLakeGetFileStatus}},
  \code{\link{azureDataLakeListStatus}},
  \code{\link{azureDataLakeMkdirs}},
  \code{\link{azureDataLakeOpenBIS}},
  \code{\link{azureDataLakeReadCore}},
  \code{\link{azureDataLakeRead}},
  \code{\link{createAdlExponentialBackoffRetryPolicy}},
  \code{\link{createAdlFileInputStream}},
  \code{\link{createAdlFileOutputStream}},
  \code{\link{createAdlNonIdempotentRetryPolicy}},
  \code{\link{createAdlRetryPolicy}},
  \code{\link{readFromService}},
  \code{\link{shouldRetry.adlExponentialBackoffRetryPolicy}},
  \code{\link{shouldRetry.adlNonIdempotentRetryPolicy}},
  \code{\link{shouldRetry}}
}
